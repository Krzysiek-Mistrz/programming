1) Instrukcje warunkowa mozemy tak samo zastowac w przypadku stwierdzen falszywych. Potrzebujemy tylko innego oswiadczenia. Do tego bedziemy uzywac oswiadczenie else.
Instrukcja else moze byc uzywana do uruchamiania niektorych instrukcji, gdy warunkiem instrukcji if jest FALSE. Podobnie jak w przypadku instrukcji if, kod wewnatrz bloku musi byc wciety.
x = 4
if x == 5:
   print("YES")
else:
   print("NO")
Dwukropek po else jest rownie wazny co po warunku instrukcji if, nie zapominaj o nim.

2) Podaj rezultat kodu:
if 1 + 1 = 2:
   if 2 * 2 == 8:
      print("if")
   else:
      print("else")
Rezultat: else.

3) Musisz wiedziec ze kazdy blok warunkowy if moze miec tylko jedna instrukcje else. Zatem by dokonac wielu sprawdzen, musimy polaczyc instrukcje if i else. Na przyklad ponizszy program sprawdza i wyswietla wartosc zmiennej num jako tekst.
num = 3
if num == 1:
   print("One")
else:
   if num == 2:
      print("Two")
   else:
      if num == 3:
         print("Three")
      else:
         print("Something else")

4) Wciecie okresla do ktorych instrukcji if/else naleza bloki kodu.

5) Stworz program porownujacy x i y, wypisujacy nastepnie odpowiedni tekst: "x/y jest wieksze od x".
x = 10
y = 20
if x > y:
   print("x jest wieksze od y")
else:
   print("y jest wieksze od x")

6) Oczywiscie mozna poprzestac na tych dwoch instrukcjach warunkowych jak juz pokazalismy. Jednka zauwaz ze wowczas kod bedzie bardzo dlugi i trudny do odczytania przy duzym zageszczeniu warunkow. Z tego powodu wprowadzimy sobie kolejna instrukcje warunkowa "elif" - od ang. else if. Jest to skrot do uzycia podczas laczenia instrukcji if i else, dzieki czemu kod jest krotszy i latwiejszy do odczytania.
Przyklad z poprzedniej czesci mozemy teraz apisac za pomoca instrukcji warunkowej elif:

num = 3
if num == 1:
   print("One")
elif num == 2:
   print("Two")
elif num == 3:
   print("Three")
else:
   print("Something else")
Duzo krocej i czytelniej. Jak widzisz tez "seria" 'elif' moze miec koncowy blok 'else', ktory jest wywlywany kiedy zadne z instrukcji if lub elif nie jest spelnione.
Instrukcja elif jest rownowazna do wyrazenia else/if. Jest uzywana do zrobienia kodu krotszym. Bardziej czytelnym, jednoczesnie po to by uniknac wzrostu wciec.

7) Uzywana w kodzie forma zapisu else if jest:.....
Odpowiedz: elif

8) Zadanie "Rok Przestepny"
Stworz program sprawdzajacy za pomoca instrukcji if elif i else czy rok podany przez uzytkwonika jest przestepny czy nie.
Rozwiazanie:
rok = int(input("Podaj rok: "))
if rok % 100 == 0:
   print("rok nie jest przestepny")
else:
   if rok % 4 == 0:
      if rok % 400 == 0:
         print("rok jest przestepny")
      else:
         print("rok nie jest przestepny")
   else:
      print("rok nie jest przestepny")

9) Dobra, nadszedl czas zupgradeowac nasz wiedze odnosnie wartosci logicznych o instrukcje z operatorami.
Operatory Boolean: and, or, not. Pozwalaja na sprawdzenie wielu warunkow w instrukcji if.
Zacznijmy od operatory "and" - przyjmuje on wartosc prawda jesli oba warunki maja wartosc prawda. Przyklad:
print(1 == 1 and 2 == 2)
True
print(1 == 1 and 2 == 3)
False
print(1 != 1 and 2 == 2)
False
Operatory boolean (przypominam - czytamy buljan) moga byc uzyte w naszym kodzie tak wiele razy jak potrzebujemy.

10) Podaj rezultat kodu:
if(1 == 1) and (2 + 2 > 3):
  print("True")
else:
  print("False")
Rezultat: True

11) Omowmy sobie teraz operator lub - "or". Operator "or" ma wartosc True jesli ktorykolwiek lub oba z jego warunkow sa prawdziwe, a False jesli oba warunki sa falszywe.
print(1 == 1 or 2 == 2)
True
print(1 == 1 or 2 == 3)
True
print(1 != 1 or 2 == 3)
False
Poza wartosciami mozesz takze porownywac zmienne.

12) Dodaj w miejsce kroperk odpowiedni operator tak zeby wynikiem - rezultatem kodu bylo slowo "Welcome".
age = 15
money = 500
if age > 18 (1)... money > 100
(2)... ("Welcome")
Wpisujemy: (1)or (2)print

13) Operator "not" dziala troszke inaczej - bierze on tylko jeden argument nastepnie go odwraca. Tzn. Jezeli napiszemy not True, w tym wypadku argumentem bedzie True to wowczas instrukcja not "odwroci" ten argument i dostaniemy ostatecznie False. zatem przyklad:
print(not 1 == 1)
False
print(not 1 > 7)
True
Za pomoca operatorow boolean mozesz laczyc wiele warunkow wewnatrz wyrazenia "if".

14) Podaj rezultat kodu:
if not True:
   print("1")
elif not(1 + 1 == 3):
   print("2")
else:
   print("3")
Rezultat: 2
Wyjasnienie: Zaprzeczenie True da wartosc ostateczna zero czyli false zatem instrukcja if sie nie wykoana. else if 1 + 1 == 3 jest false zatem not na argumencie False da nam w ostatecznosci argument True.

15) Zadanie "magia 24K"
Przerob zadanie z karatami i czystoscia zlota tak zeby uzytkownik wprowadzal liczbe zmiennoprzecinkowa symbolizujaca wartosc w procentach. Jezeli czystosc podana przez uzytkownika jest >= 99.99 i <= 100 wyswietl 24K, Jezeli czystosc w procentach jest >= 91.7 wyswietl 22K, jezeli jest wieksza od 83.3 wyswietl 20K, jezeli jest wieksza od 75 wyswietl 18K. jezeli jest mniejsza od 75 wyswietl 16K.
czystosc = float(input("PODAJ CZYSTOSC ZLOTA: "))
if czystosc >= 99.99 and czystosc <= 100:
print("24K")
elif czystosc < 99.99 and czystosc >= 91.7:
print("22K")
elif czystosc < 91.7 and czystosc >= 83.3:
print("20K")
elif czystosc < 83.3 and czystosc >= 75:
print("18K")
else:
print("16K")